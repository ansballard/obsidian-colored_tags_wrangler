import { __awaiter } from "tslib";
// ---------------------------------------------------------------------------------------------------------------------
// Imports
// ---------------------------------------------------------------------------------------------------------------------
import { ColorComponent } from "obsidian";
import { hexToRGBA, rgbaToHex } from "../../../../../lib/ColorConverters";
import { ServiceProvider } from "../../../../services/ServiceProvider";
// ---------------------------------------------------------------------------------------------------------------------
// Code
// ---------------------------------------------------------------------------------------------------------------------
export class SettingTagRecordColorComponent extends ColorComponent {
    constructor(rowData, property_name) {
        super(rowData.parentEl); // Obsidian's stuff
        let value = rowData.record[property_name];
        this.setValue(rgbaToHex(value));
        this.onChange((newValue) => __awaiter(this, void 0, void 0, function* () {
            rowData.record[property_name] = hexToRGBA(newValue, 1);
            yield ServiceProvider.tagRecords.addOrUpdateTag(rowData.record);
            yield rowData.rowUpdateCallback(); // Updates the preview element
        }));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2V0dGluZ1RhZ1JlY29yZENvbG9yQ29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiU2V0dGluZ1RhZ1JlY29yZENvbG9yQ29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSx3SEFBd0g7QUFDeEgsVUFBVTtBQUNWLHdIQUF3SDtBQUN4SCxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sVUFBVSxDQUFDO0FBRXhDLE9BQU8sRUFBQyxTQUFTLEVBQUUsU0FBUyxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFLeEUsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLHNDQUFzQyxDQUFDO0FBR3JFLHdIQUF3SDtBQUN4SCxPQUFPO0FBQ1Asd0hBQXdIO0FBQ3hILE1BQU0sT0FBTyw4QkFBK0IsU0FBUSxjQUFjO0lBQ2pFLFlBQVksT0FBbUIsRUFBRSxhQUFvQztRQUNwRSxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsbUJBQW1CO1FBRTVDLElBQUksS0FBSyxHQUFVLE9BQU8sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFTLENBQUM7UUFDekQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQTtRQUUvQixJQUFJLENBQUMsUUFBUSxDQUFDLENBQU8sUUFBUSxFQUFFLEVBQUU7WUFDaEMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxTQUFTLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3ZELE1BQU0sZUFBZSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFBO1lBQy9ELE1BQU0sT0FBTyxDQUFDLGlCQUFpQixFQUFFLENBQUEsQ0FBQyw4QkFBOEI7UUFDakUsQ0FBQyxDQUFBLENBQUMsQ0FBQTtJQUVILENBQUM7Q0FDRCIsInNvdXJjZXNDb250ZW50IjpbIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBJbXBvcnRzXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5pbXBvcnQge0NvbG9yQ29tcG9uZW50fSBmcm9tIFwib2JzaWRpYW5cIjtcclxuaW1wb3J0IHtSR0JTZWxlY3RvclByb3BlcnRpZXN9IGZyb20gXCJzcmMvY29udHJhY3RzL3BsdWdpbi9zZXJ2aWNlcy9leHRlbnNpb25zL0V4dGVuc2lvblByb3BlcnRpZXNcIjtcclxuaW1wb3J0IHtoZXhUb1JHQkEsIHJnYmFUb0hleH0gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL2xpYi9Db2xvckNvbnZlcnRlcnNcIjtcclxuaW1wb3J0IHtSR0JBfSBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vY29udHJhY3RzL3R5cGVzL1JHQkFcIjtcclxuaW1wb3J0IHtcclxuXHRJU2V0dGluZ1RhZ1JlY29yZENvbXBvbmVudFxyXG59IGZyb20gXCIuLi8uLi8uLi8uLi8uLi9jb250cmFjdHMvcGx1Z2luL3VpL2NvbXBvbmVudHMvdGFnX3RhYmxlL0lTZXR0aW5nVGFnUmVjb3JkQ29tcG9uZW50XCI7XHJcbmltcG9ydCB7U2VydmljZVByb3ZpZGVyfSBmcm9tIFwiLi4vLi4vLi4vLi4vc2VydmljZXMvU2VydmljZVByb3ZpZGVyXCI7XHJcbmltcG9ydCB7Um93RGF0YVR5cGV9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi9jb250cmFjdHMvcGx1Z2luL3VpL2NvbXBvbmVudHMvUm93RGF0YVR5cGVcIjtcclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBDb2RlXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5leHBvcnQgY2xhc3MgU2V0dGluZ1RhZ1JlY29yZENvbG9yQ29tcG9uZW50IGV4dGVuZHMgQ29sb3JDb21wb25lbnQgaW1wbGVtZW50cyBJU2V0dGluZ1RhZ1JlY29yZENvbXBvbmVudCB7XHJcblx0Y29uc3RydWN0b3Iocm93RGF0YTpSb3dEYXRhVHlwZSwgcHJvcGVydHlfbmFtZTogUkdCU2VsZWN0b3JQcm9wZXJ0aWVzICkge1xyXG5cdFx0c3VwZXIocm93RGF0YS5wYXJlbnRFbCk7IC8vIE9ic2lkaWFuJ3Mgc3R1ZmZcclxuXHJcblx0XHRsZXQgdmFsdWUgOiBSR0JBID0gcm93RGF0YS5yZWNvcmRbcHJvcGVydHlfbmFtZV0gYXMgUkdCQTtcclxuXHRcdHRoaXMuc2V0VmFsdWUocmdiYVRvSGV4KHZhbHVlKSlcclxuXHJcblx0XHR0aGlzLm9uQ2hhbmdlKGFzeW5jIChuZXdWYWx1ZSkgPT4ge1xyXG5cdFx0XHRyb3dEYXRhLnJlY29yZFtwcm9wZXJ0eV9uYW1lXSA9IGhleFRvUkdCQShuZXdWYWx1ZSwgMSk7XHJcblx0XHRcdGF3YWl0IFNlcnZpY2VQcm92aWRlci50YWdSZWNvcmRzLmFkZE9yVXBkYXRlVGFnKHJvd0RhdGEucmVjb3JkKVxyXG5cdFx0XHRhd2FpdCByb3dEYXRhLnJvd1VwZGF0ZUNhbGxiYWNrKCkgLy8gVXBkYXRlcyB0aGUgcHJldmlldyBlbGVtZW50XHJcblx0XHR9KVxyXG5cclxuXHR9XHJcbn1cclxuIl19